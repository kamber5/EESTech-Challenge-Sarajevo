import 'package:flutter/material.dart';
import 'package:flutterapp/super_20skillsapp/generatedmath4widget/generated/GeneratedEllipse1Widget.dart';
import 'package:flutterapp/super_20skillsapp/generatedmath4widget/generated/GeneratedVectorWidget960.dart';
import 'package:flutterapp/super_20skillsapp/generatedmath4widget/generated/GeneratedEllipse2Widget.dart';
import 'package:flutterapp/helpers/transform/transform.dart';
import 'package:flutterapp/super_20skillsapp/generatedmath4widget/generated/GeneratedEllipse3Widget.dart';

/* Frame Frame
    Autogenerated by FlutLab FTF Generator
  */
class GeneratedFrameWidget19 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => Navigator.pushNamed(context, '/GeneratedMathcorrect4Widget'),
      child: Container(
        child: ClipRRect(
          borderRadius: BorderRadius.circular(25.0),
          child: Container(
            width: 150.0,
            height: 100.0,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(25.0),
              border: Border.all(
                width: 1.0,
                color: Color.fromARGB(255, 56, 52, 52),
              ),
            ),
            child: Stack(
                fit: StackFit.expand,
                alignment: Alignment.center,

                children: [
                  Positioned(
                    left: 0.0,
                    top: 0.0,
                    right: 0.0,
                    bottom: 0.0,
                    width: null,
                    height: null,
                    child: LayoutBuilder(builder:
                        (BuildContext context, BoxConstraints constraints) {
                      double percentWidth = 1.0;
                      double scaleX =
                          (constraints.maxWidth * percentWidth) / 150.0;

                      double percentHeight = 1.0;
                      double scaleY =
                          (constraints.maxHeight * percentHeight) / 100.0;

                      return Stack(children: [
                        TransformHelper.translateAndScale(
                            translateX: 0,
                            translateY: 0,
                            translateZ: 0,
                            scaleX: scaleX,
                            scaleY: scaleY,
                            scaleZ: 1,
                            child: GeneratedVectorWidget960())
                      ]);
                    }),
                  ),
                  Positioned(
                    left: 0.0,
                    top: 0.0,
                    right: 0.0,
                    bottom: 0.0,
                    width: null,
                    height: null,
                    child: LayoutBuilder(builder:
                        (BuildContext context, BoxConstraints constraints) {
                      double percentWidth = 0.2;
                      double scaleX =
                          (constraints.maxWidth * percentWidth) / 30.0;

                      double percentHeight = 0.3;
                      double scaleY =
                          (constraints.maxHeight * percentHeight) / 30.0;

                      return Stack(children: [
                        TransformHelper.translateAndScale(
                            translateX: constraints.maxWidth * 0.12,
                            translateY: constraints.maxHeight * 0.34,
                            translateZ: 0,
                            scaleX: scaleX,
                            scaleY: scaleY,
                            scaleZ: 1,
                            child: GeneratedEllipse1Widget())
                      ]);
                    }),
                  ),
                  Positioned(
                    left: 0.0,
                    top: 0.0,
                    right: 0.0,
                    bottom: 0.0,
                    width: null,
                    height: null,
                    child: LayoutBuilder(builder:
                        (BuildContext context, BoxConstraints constraints) {
                      double percentWidth = 0.2;
                      double scaleX =
                          (constraints.maxWidth * percentWidth) / 30.0;

                      double percentHeight = 0.3;
                      double scaleY =
                          (constraints.maxHeight * percentHeight) / 30.0;

                      return Stack(children: [
                        TransformHelper.translateAndScale(
                            translateX: constraints.maxWidth * 0.4,
                            translateY: constraints.maxHeight * 0.34,
                            translateZ: 0,
                            scaleX: scaleX,
                            scaleY: scaleY,
                            scaleZ: 1,
                            child: GeneratedEllipse2Widget())
                      ]);
                    }),
                  ),
                  Positioned(
                    left: 0.0,
                    top: 0.0,
                    right: 0.0,
                    bottom: 0.0,
                    width: null,
                    height: null,
                    child: LayoutBuilder(builder:
                        (BuildContext context, BoxConstraints constraints) {
                      double percentWidth = 0.2;
                      double scaleX =
                          (constraints.maxWidth * percentWidth) / 30.0;

                      double percentHeight = 0.3;
                      double scaleY =
                          (constraints.maxHeight * percentHeight) / 30.0;

                      return Stack(children: [
                        TransformHelper.translateAndScale(
                            translateX: constraints.maxWidth * 0.68,
                            translateY: constraints.maxHeight * 0.34,
                            translateZ: 0,
                            scaleX: scaleX,
                            scaleY: scaleY,
                            scaleZ: 1,
                            child: GeneratedEllipse3Widget())
                      ]);
                    }),
                  )
                ]),
          ),
        ),
      ),
    );
  }
}
